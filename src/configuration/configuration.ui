<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>configWidget</class>
 <widget class="QWidget" name="configWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>671</width>
    <height>337</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Configuration and Control</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_4">
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_5">
     <item>
      <layout class="QVBoxLayout" name="verticalLayout_3">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout" stretch="0,0">
         <item>
          <widget class="QPushButton" name="portSelector">
           <property name="text">
            <string>Maps Port</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="dlTextButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Save the lines of text that appear as dynamic label&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>DL Text</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_4">
         <item>
          <widget class="QPushButton" name="skipList_button">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;show or hide the skipList. Updates in the skipList will be saved.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Skip List</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="skipFile_button">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select a file for the skipList. If the file does not exist yet, it will be created and initialized with a skipList with no channels set to skip.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Skip File</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_7">
         <item>
          <widget class="QPushButton" name="set_coordinatesButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Enter your local map coordinates&lt;/span&gt;&lt;/p&gt;&lt;p&gt;This is necessary to show the correct direction and distance of the received TII information.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Coordinates</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="loadTableButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Touching this button instructs the software to (try to) load a so-called tii table, a table with the&lt;/p&gt;&lt;p&gt;encodings of tii data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Load TII Table</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_8">
         <item>
          <widget class="QPushButton" name="contentButton">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This will open a 'save as ... dialog' where you can select a file to store a description of the content of the current DAB ensemble (Audio and Data) in a text file.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Content</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="dumpButton">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Push this button to save the raw input. Pushing will cause a menu to appear where a filename can be selected. Please note the big filesizes!&lt;/p&gt;&lt;p&gt;Push again to stop recording. You can reload it by using the file input (*.sdr) option. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Raw dump</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_9">
         <item>
          <widget class="QPushButton" name="resetButton">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Push this button to reset, i.e. restart synchronization.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QPushButton { background-color:qlineargradient(x1:1, y1:0, x2:1, y2:1, stop:0 rgba(158, 58, 58, 255),stop:1 rgba(118, 18, 18, 255)); color: #ffffff; }
            </string>
           </property>
           <property name="text">
            <string>Reset</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_10">
         <item>
          <widget class="QComboBox" name="cmbSoftBitGen">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Select soft bit generation type&lt;/span&gt;&lt;/p&gt;&lt;p&gt;There are several ideas on how to calculate the soft bit values for the Virterbi decoder. In some weak reception conditions, this may cause a change.&lt;/p&gt;&lt;p&gt;See the &amp;quot;Soft-Bit Weight&amp;quot; of the Carrier Plot for the calculation results.&lt;/p&gt;&lt;p&gt;As the first entry should provide almost the best result, the value is not stored persistently.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QComboBox" name="cmbSoundOutput"/>
       </item>
       <item>
        <widget class="QComboBox" name="deviceSelector">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Select input device&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item>
      <widget class="Line" name="line_2">
       <property name="styleSheet">
        <string notr="true">background-color: black;</string>
       </property>
       <property name="orientation">
        <enum>Qt::Orientation::Vertical</enum>
       </property>
      </widget>
     </item>
     <item>
      <layout class="QVBoxLayout" name="verticalLayout_2">
       <item>
        <widget class="QCheckBox" name="cbAlwaysOnTop">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration whether or not the main widget should ALWAYS be op top. Note that setting will be applied the next time the program will start.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Main widget always on top</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbCloseDirect">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are bored with the explicit request to stop, touch this one, and stopping is direct&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Close without asking</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbActivateLogger">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Sometime one wants to see what was done, the logger just dumps some data into a file, showing the selections made.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Activate logger</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUseNativeFileDialog">
         <property name="text">
          <string>Use native file dialogs</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUseUtcTime">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you want to see UTC in the logs select this one.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Use UTC time</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUrlClickable">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;URLs are clickable in dynamic label text&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The dynamic label text is scanned for URLs and email addresses and the links are (tried to) converted into clickable links. So the web browser or email program should be opened automatically by clicking on them.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>URLs clickable in dyn. label</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QComboBox" name="cmbMotObjectSaving">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Choose whether MOT objects (such slices/images) should be saved&lt;/span&gt;&lt;/p&gt;&lt;p&gt;You can choose whether the files should be saved in a single folder or in a directory tree.&lt;/p&gt;&lt;p&gt;The base folder is &lt;br/&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;$(HOME)/DABstar/PIC/&lt;/span&gt; or&lt;span style=&quot; font-weight:700;&quot;&gt;&lt;br/&gt;$(HOME)/DABstar/MOT/&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <item>
          <property name="text">
           <string>Do not save MOT objects</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Save MOT objects in a single folder</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Save MOT objects in a directory tree</string>
          </property>
         </item>
        </widget>
       </item>
       <item>
        <widget class="QComboBox" name="cmbEpgObjectSaving">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Choose whether EPG data should be saved&lt;/span&gt;&lt;/p&gt;&lt;p&gt;You can choose whether the files should be saved in a single folder or in a directory tree.&lt;/p&gt;&lt;p&gt;The base folder is&lt;br/&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;$(HOME)/DABstar/EPG/&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <item>
          <property name="text">
           <string>Do not save EPG objects</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Save EPG objects in a single folder</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Save EPG objects in a directory tree</string>
          </property>
         </item>
        </widget>
       </item>
       <item>
        <widget class="QComboBox" name="cmbScanServiceListFilter">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Select which kind of services are searched for while scanning&lt;/span&gt;&lt;/p&gt;&lt;p&gt;There are two major kinds of services: &lt;span style=&quot; font-style:italic;&quot;&gt;audio&lt;/span&gt; and &lt;span style=&quot; font-style:italic;&quot;&gt;non-audio&lt;/span&gt; (SPI, EPG, MOT, etc.).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <item>
          <property name="text">
           <string>Scan audio services only</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Scan non-audio services only</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Scan all services</string>
          </property>
         </item>
        </widget>
       </item>
      </layout>
     </item>
     <item>
      <widget class="Line" name="line">
       <property name="styleSheet">
        <string notr="true">background-color: black;</string>
       </property>
       <property name="orientation">
        <enum>Qt::Orientation::Vertical</enum>
       </property>
      </widget>
     </item>
     <item>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <widget class="QCheckBox" name="cbActivateEti">
         <property name="enabled">
          <bool>false</bool>
         </property>
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This is (currently) not supported&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Activate ETI</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbManualBrowserStart">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration that on starting the http service a browser will have to be started manually. Default is browser starts automatically.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Start map browser manually</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbSaveTransToCsv">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When this is set, the transmitter descriptions visible on the map are also stored in a &amp;quot;.csv&amp;quot; file.&lt;/p&gt;&lt;p&gt;On starting the httpHandler, a file selection menu will appear.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Save transmitters to CSV</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUseDcAvoidance">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Try to avoid a DC compoment on used OFDM-bins around the 0Hz-OFDM-bin.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Many SDR devices have an analog IQ receiving concept. This tends to have a DC component at 0Hz baseband. &lt;/p&gt;&lt;p&gt;Therefore, the DAB standard do not use the OFDM-bin at 0Hz to avoid decoding problems. But as the frequency correction is usually done only in the baseband, the DC could be seen also in the neighbor OFDM-bins where the demodulation of the data could be bad.&lt;/p&gt;&lt;p&gt;This feature tries to use the RF synthesizer on the SDR device to shift the DC component to the unsused 0Hz-OFDM-bin again. The remaining frequency correction is still done in the baseband.&lt;/p&gt;&lt;p&gt;Not all devices allows fine RF frequency tuning (and not on all relevant frequencies), so this is not always working fully well, but should also not cause any harm.&lt;/p&gt;&lt;p&gt;This should make a difference in bad reception conditions. See needed RS (Reed-Solomon) correction.&lt;/p&gt;&lt;p&gt;While switching audio could drop for a short time.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Use DC avoidance algorithm</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUseDcRemoval">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;DC removal filter&lt;/span&gt;&lt;/p&gt;&lt;p&gt;This removes the possible remaining DC from the input signal. &lt;/p&gt;&lt;p&gt;Together with the &lt;span style=&quot; font-style:italic;&quot;&gt;DC Avoidance Algrithm&lt;/span&gt; this should be of an advantage. But with not all situations and devices this will work well.&lt;/p&gt;&lt;p&gt;You would see the DC on the &amp;quot;needle&amp;quot; in the spectrum view (upper right corner).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Use DC removal filter</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbUseStrongestPeak">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If set, the correlation module will report the strongest peak in the correlation, rather than the first (above a certain minimum).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Use strongest correlation peak</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cbAutoIterTiiEntries">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Automatically iterate over TII entries&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The TII location list in the main window can be iterated automatically. If not selected then always the first (strongest) TII entry is shown.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Autom. iterate over TII entries</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_2" stretch="3,1">
         <item>
          <widget class="QCheckBox" name="cbTiiCollisions">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Shows TII collisions as main id = 99&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Show TII coll. for Sub Id</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="sbTiiSubId">
           <property name="minimum">
            <number>0</number>
           </property>
           <property name="maximum">
            <number>23</number>
           </property>
           <property name="value">
            <number>0</number>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_3" stretch="3,1">
         <item>
          <widget class="QLabel" name="label_6">
           <property name="text">
            <string>TII threshold</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="sbTiiThreshold">
           <property name="toolTip">
            <string>Threshold above noise level</string>
           </property>
           <property name="suffix">
            <string> dB</string>
           </property>
           <property name="minimum">
            <number>3</number>
           </property>
           <property name="maximum">
            <number>9</number>
           </property>
           <property name="value">
            <number>6</number>
           </property>
          </widget>
         </item>
        </layout>
       </item>
      </layout>
     </item>
    </layout>
   </item>
   <item>
    <widget class="QSlider" name="sliderTest">
     <property name="enabled">
      <bool>true</bool>
     </property>
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Slider for different tests. Normally no need to change.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="maximum">
      <number>10</number>
     </property>
     <property name="pageStep">
      <number>1</number>
     </property>
     <property name="value">
      <number>0</number>
     </property>
     <property name="orientation">
      <enum>Qt::Orientation::Horizontal</enum>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
